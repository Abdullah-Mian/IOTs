/*
 * ESP32 WROOM32 - ESP-NOW Receiver
 * L298N Control: PWM on IN pins only (4 pins total)
 * Works perfectly with Arduino Core 3.x+
 * (No need for ledcWrite — uses analogWrite directly)
 */

#include <esp_now.h>
#include <WiFi.h>

// L298N Motor Driver Pins - ONLY 4 PINS NEEDED
// Connect ENA and ENB to 5V directly on L298N board
#define IN1_PIN  27   // Motor A direction 1
#define IN2_PIN  26   // Motor A direction 2
#define IN3_PIN  25   // Motor B direction 1
#define IN4_PIN  33   // Motor B direction 2


int speed = 200;

// Structure to receive data
typedef struct struct_message {
  char command;
} struct_message;

struct_message incomingData;


// ─────────────────────────────
// Motor control functions
// ─────────────────────────────
void moveForward() {
  Serial.println("⬆️  FORWARD");
  analogWrite(IN1_PIN, speed);
  analogWrite(IN2_PIN, 0);
  analogWrite(IN3_PIN, speed);
  analogWrite(IN4_PIN, 0);
}

void moveBackward() {
  Serial.println("⬇️  BACKWARD");
  analogWrite(IN1_PIN, 0);
  analogWrite(IN2_PIN, speed);
  analogWrite(IN3_PIN, 0);
  analogWrite(IN4_PIN, speed);
}

void turnLeft() {
  Serial.println("⬅️  LEFT");
  analogWrite(IN1_PIN, speed);
  analogWrite(IN2_PIN, 0);
  analogWrite(IN3_PIN, 0);
  analogWrite(IN4_PIN, speed);
}

void turnRight() {
  Serial.println("➡️  RIGHT");
  analogWrite(IN1_PIN, 0);
  analogWrite(IN2_PIN, speed);
  analogWrite(IN3_PIN, speed);
  analogWrite(IN4_PIN, 0);
}

void stopMotors() {
  Serial.println("🛑 STOP");
  analogWrite(IN1_PIN, 0);
  analogWrite(IN2_PIN, 0);
  analogWrite(IN3_PIN, 0);
  analogWrite(IN4_PIN, 0);
}

// ─────────────────────────────
// ESP-NOW Data Receive Callback
// ─────────────────────────────
void OnDataRecv(const esp_now_recv_info_t *recv_info, const uint8_t *data, int len) {
  memcpy(&incomingData, data, sizeof(incomingData));
  
  Serial.println("╔════════════════════════════════╗");
  Serial.print("║ 📥 Command: ");
  Serial.print(incomingData.command);
  
  // Execute motor command
  switch (incomingData.command) {
    case 'W': moveForward(); break;
    case 'B': moveBackward(); break;
    case 'A': turnLeft(); break;
    case 'D': turnRight(); break;
    case 'S': stopMotors(); break;
    case 'X':
    default:  stopMotors(); break;
  }
  
}

// ─────────────────────────────
// Setup
// ─────────────────────────────
void setup() {
  Serial.begin(115200);
  delay(1000);
  
  Serial.println("\n╔═══════════════════════════════════════╗");
  Serial.println("║      ESP32 WROOM32 ESP-NOW Receiver   ║");
  Serial.println("║         L298N (4-PIN PWM MODE)        ║");
  Serial.println("╚═══════════════════════════════════════╝\n");
  
  // Configure motor control pins
  pinMode(IN1_PIN, OUTPUT);
  pinMode(IN2_PIN, OUTPUT);
  pinMode(IN3_PIN, OUTPUT);
  pinMode(IN4_PIN, OUTPUT);
 
  stopMotors();
  Serial.println("✅ Motor driver initialized (4-pin mode)");
  Serial.println("⚠️  Connect ENA and ENB to 5V on L298N board");
  
  // WiFi setup
  WiFi.mode(WIFI_STA);
  
  // Display MAC address
  Serial.println("\n╔═══════════════════════════════════════╗");
  Serial.println("║         IMPORTANT: COPY THIS!         ║");
  Serial.println("╠═══════════════════════════════════════╣");
  Serial.print("║ 📍 WROOM32 MAC: ");
  Serial.print(WiFi.macAddress());
  Serial.println("  ║");
  Serial.println("╚═══════════════════════════════════════╝");
  Serial.println("\n⚠️  Copy the MAC above and set it as receiverMAC[] in your ESP32-C3 sender code!\n");
  
  // Initialize ESP-NOW
  if (esp_now_init() != ESP_OK) {
    Serial.println("❌ ESP-NOW Init Failed! Restarting...");
    delay(1000);
    ESP.restart();
  }
  
  Serial.println("✅ ESP-NOW Initialized");
  
  // Register receive callback
  esp_now_register_recv_cb(OnDataRecv);
  Serial.println("✅ Receive callback registered");
  Serial.println("\n🎮 Waiting for commands...\n");
  Serial.println("───────────────────────────────────────");
}

// ─────────────────────────────
// Main loop
// ─────────────────────────────
void loop() {
  // Auto-stop if no packets received for 2 seconds

}
